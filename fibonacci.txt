  outp | addr | data

   0:0 |    0 | 19 01 ; mov a, 1
   2:0 |    2 | 11 6a ; mov mar, x
   4:0 |    4 | 0b    ; mov [mar], a
   5:0 |    5 | 11 6b ; mov mar, y
   7:0 |    7 | 0b    ; mov [mar], a
   8:0 |    8 |       ; loop:
   8:0 |    8 | 11 6a ; mov mar, x
   a:0 |    a | 1a    ; mov a, [mar]
   b:0 |    b | 11 6b ; mov mar, y
   d:0 |    d | 22    ; mov b, [mar]
   e:0 |    e | 31 10 ; mov alu, 0b00010000
  10:0 |   10 | 81 68 ; movc pc, exit
  12:0 |   12 | 1e    ; mov a, alu
  13:0 |   13 | 11 6a ; mov mar, x
  15:0 |   15 | 0b    ; mov [mar], a
  16:0 |   16 | 29 1d ; mov c, ret_a
  18:0 |   18 | 11 43 ; mov mar, print_val-1
  1a:0 |   1a | 0d    ; mov [mar], c
  1b:0 |   1b | 01 44 ; mov pc, print_val
  1d:0 |   1d |       ; ret_a:
  1d:0 |   1d | 11 6a ; mov mar, x
  1f:0 |   1f | 1a    ; mov a, [mar]
  20:0 |   20 | 11 6b ; mov mar, y
  22:0 |   22 | 22    ; mov b, [mar]
  23:0 |   23 | 31 10 ; mov alu, 0b00010000
  25:0 |   25 | 81 68 ; movc pc, exit
  27:0 |   27 | 1e    ; mov a, alu
  28:0 |   28 | 11 6b ; mov mar, y
  2a:0 |   2a | 0b    ; mov [mar], a
  2b:0 |   2b | 29 32 ; mov c, ret_b
  2d:0 |   2d | 11 43 ; mov mar, print_val-1
  2f:0 |   2f | 0d    ; mov [mar], c
  30:0 |   30 | 01 44 ; mov pc, print_val
  32:0 |   32 |       ; ret_b:
  32:0 |   32 | 01 08 ; mov pc, loop
  34:0 |   34 | 00    ; #d8 0
  35:0 |   35 |       ; divide:
  35:0 |   35 | 28    ; mov c, 0
  36:0 |   36 |       ; .loop:
  36:0 |   36 | 31 11 ; mov alu, 0b00010001
  38:0 |   38 | 81 40 ; movc pc, .skip
  3a:0 |   3a | 1e    ; mov a, alu
  3b:0 |   3b | 31 78 ; mov alu, 0b01111000
  3d:0 |   3d | 2e    ; mov c, alu
  3e:0 |   3e | 01 36 ; mov pc, .loop
  40:0 |   40 |       ; .skip:
  40:0 |   40 | 11 34 ; mov mar, divide-1
  42:0 |   42 | 02    ; mov pc, [mar]
  43:0 |   43 | 00    ; #d8 0
  44:0 |   44 |       ; print_val:
  44:0 |   44 | 21 64 ; mov b, 100
  46:0 |   46 | 29 4d ; mov c, .ret_a
  48:0 |   48 | 11 34 ; mov mar, divide-1
  4a:0 |   4a | 0d    ; mov [mar], c
  4b:0 |   4b | 01 35 ; mov pc, divide
  4d:0 |   4d |       ; .ret_a:
  4d:0 |   4d | 21 30 ; mov b, "0"
  4f:0 |   4f | 31 18 ; mov alu, 0b00011000
  51:0 |   51 | 3e    ; mov out, alu
  52:0 |   52 | 21 0a ; mov b, 10
  54:0 |   54 | 29 5b ; mov c, .ret_b
  56:0 |   56 | 11 34 ; mov mar, divide-1
  58:0 |   58 | 0d    ; mov [mar], c
  59:0 |   59 | 01 35 ; mov pc, divide
  5b:0 |   5b |       ; .ret_b:
  5b:0 |   5b | 21 30 ; mov b, "0"
  5d:0 |   5d | 31 18 ; mov alu, 0b00011000
  5f:0 |   5f | 3e    ; mov out, alu
  60:0 |   60 | 31 10 ; mov alu, 0b00010000
  62:0 |   62 | 3e    ; mov out, alu
  63:0 |   63 | 39 0a ; mov out, "\n"
  65:0 |   65 | 11 43 ; mov mar, print_val-1
  67:0 |   67 | 02    ; mov pc, [mar]
  68:0 |   68 |       ; exit:
  68:0 |   68 | c1 00 ; seg 1, end
  6a:0 |   6a |       ; x:
  6a:0 |   6a | 01    ; #d8 1
  6b:0 |   6b |       ; y:
  6b:0 |   6b | 01    ; #d8 1
 100:0 |    0 |       ; end:
 100:0 |    0 | 19 28 ; mov a, end_str
 102:0 |    2 | 29 09 ; mov c, .loop
 104:0 |    4 | 11 18 ; mov mar, print_str-1
 106:0 |    6 | 0d    ; mov [mar], c
 107:0 |    7 | 01 19 ; mov pc, print_str
 109:0 |    9 |       ; .loop:
 109:0 |    9 | 1f    ; mov a, in
 10a:0 |    a | 21 80 ; mov b, 0b10000000
 10c:0 |    c | 31 12 ; mov alu, 0b00010010
 10e:0 |    e | 1e    ; mov a, alu
 10f:0 |    f | 31 02 ; mov alu, 0b00000010
 111:0 |   11 | 41 16 ; movz pc, .skip
 113:0 |   13 | 3f    ; mov out, in
 114:0 |   14 | 39 80 ; mov out, 0x80
 116:0 |   16 |       ; .skip:
 116:0 |   16 | 01 09 ; mov pc, .loop
 118:0 |   18 | 00    ; #d8 0
 119:0 |   19 |       ; print_str:
 119:0 |   19 | 13    ; mov mar, a
 11a:0 |   1a |       ; .loop:
 11a:0 |   1a | 1a    ; mov a, [mar]
 11b:0 |   1b | 31 30 ; mov alu, 0b00110000
 11d:0 |   1d | 41 25 ; movz pc, .skip
 11f:0 |   1f | 3b    ; mov out, a
 120:0 |   20 | 31 7c ; mov alu, 0b01111100
 122:0 |   22 | 16    ; mov mar, alu
 123:0 |   23 | 01 1a ; mov pc, .loop
 125:0 |   25 |       ; .skip:
 125:0 |   25 | 11 18 ; mov mar, print_str-1
 127:0 |   27 | 02    ; mov pc, [mar]
 128:0 |   28 |       ; end_str:
 128:0 |   28 | 44 6f 6e 65 21 00 ; #d "Done!\0"
